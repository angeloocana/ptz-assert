{"version":3,"sources":["../dist-esnext/index.test.js"],"names":["mustThrewException","exec","errorMsg","threw","ex","describe","it","undefined","hi","a","b","hello","list","c","i"],"mappings":"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","file":"index.test.js","sourcesContent":["import { contains, containsFind, containsNTimes, deepEqual, emptyArray, equal, notContains, notContainsFind, notDeepEqual, notEmptyArray, notEmptyString, notEqual, notOk, ok, throws } from './index';\nlet mustThrewException = (exec, errorMsg) => {\n    let threw = false;\n    try {\n        exec();\n    }\n    catch (ex) {\n        threw = true;\n        if (errorMsg && ex !== errorMsg)\n            throw 'not threw custom error msg: ' + errorMsg;\n    }\n    finally {\n        if (!threw)\n            throw 'not threw an exception'; // tslint:disable-line:no-unsafe-finally\n    }\n};\ndescribe('ok', () => {\n    it('null', () => {\n        mustThrewException(() => {\n            ok(null);\n        });\n    });\n    it('undefined', () => {\n        mustThrewException(() => {\n            ok(undefined);\n        });\n    });\n    it('false', () => {\n        mustThrewException(() => {\n            ok(false);\n        });\n    });\n    it('true', () => {\n        ok(true);\n    });\n    it('obj', () => {\n        ok({ hi: 'hi' });\n    });\n});\ndescribe('notOk', () => {\n    it('null', () => {\n        notOk(null);\n    });\n    it('undefined', () => {\n        notOk(undefined);\n    });\n    it('false', () => {\n        notOk(false);\n    });\n    it('true', () => {\n        mustThrewException(() => {\n            notOk(true);\n        });\n    });\n    it('obj', () => {\n        mustThrewException(() => {\n            notOk({ hi: 'hi' });\n        });\n    });\n});\ndescribe('equal', () => {\n    it('true', () => {\n        let a = { hi: 'hi' };\n        let b = a;\n        equal(a, b);\n    });\n    it('false', () => {\n        let a = { hi: 'hi' };\n        let b = { hello: 'hello' };\n        mustThrewException(() => {\n            equal(a, b);\n        });\n    });\n});\ndescribe('notEqual', () => {\n    it('true', () => {\n        let a = { hi: 'hi' };\n        let b = a;\n        mustThrewException(() => {\n            notEqual(a, b);\n        });\n    });\n    it('false', () => {\n        let a = { hi: 'hi' };\n        let b = { hello: 'hello' };\n        notEqual(a, b);\n    });\n});\ndescribe('deepEqual', () => {\n    it('true', () => {\n        let a = { hi: 'hi' };\n        let b = { hi: 'hi' };\n        deepEqual(a, b);\n    });\n    it('false', () => {\n        let a = { hi: 'hi' };\n        let b = { hello: 'hello' };\n        mustThrewException(() => {\n            deepEqual(a, b);\n        });\n    });\n});\ndescribe('notDeepEqual', () => {\n    it('true', () => {\n        let a = { hi: 'hi' };\n        let b = { hello: 'hello' };\n        notDeepEqual(a, b);\n    });\n    it('false', () => {\n        let a = { hi: 'hi' };\n        let b = { hi: 'hi' };\n        mustThrewException(() => {\n            notDeepEqual(a, b);\n        });\n    });\n});\ndescribe('throw', () => {\n    it('true', () => {\n        throws(() => {\n            throw 'Teste';\n        });\n    });\n});\ndescribe('contains', () => {\n    it('true', () => {\n        var list = ['a', 'b'];\n        contains(list, 'a');\n    });\n    it('false', () => {\n        var list = ['a', 'b'];\n        mustThrewException(() => {\n            contains(list, 'c');\n        });\n    });\n});\ndescribe('containsFind', () => {\n    it('true', () => {\n        var list = [{ a: 'b' }, { c: 'd' }];\n        containsFind(list, i => i.a === 'b');\n    });\n    it('false', () => {\n        var list = [{ a: 'b' }, { c: 'd' }];\n        mustThrewException(() => {\n            containsFind(list, i => i.a === 'c');\n        });\n    });\n});\ndescribe('notContainsFind', () => {\n    it('true', () => {\n        var list = [{ a: 'b' }, { c: 'd' }];\n        notContainsFind(list, i => i.a === 'c');\n    });\n    it('false', () => {\n        var list = [{ a: 'b' }, { c: 'd' }];\n        mustThrewException(() => {\n            notContainsFind(list, i => i.a === 'b');\n        });\n    });\n});\ndescribe('containsNTimes', () => {\n    const list = ['a', 'b', 'b', 'c', 'c', 'c'];\n    it('0', () => {\n        containsNTimes(list, 'd', 0);\n    });\n    it('1', () => {\n        containsNTimes(list, 'a', 1);\n    });\n    it('2', () => {\n        containsNTimes(list, 'b', 2);\n    });\n    it('3', () => {\n        containsNTimes(list, 'c', 3);\n    });\n});\ndescribe('notContains', () => {\n    it('true', () => {\n        var list = ['a', 'b'];\n        notContains(list, 'c');\n        notContains(undefined, 'c');\n    });\n    it('false', () => {\n        var list = ['a', 'b'];\n        mustThrewException(() => {\n            notContains(list, 'a');\n        });\n    });\n});\ndescribe('notEmptyString', () => {\n    it('not empty', () => {\n        notEmptyString('Hello world!');\n    });\n    it('empty', () => {\n        mustThrewException(() => {\n            notEmptyString('');\n        });\n    });\n    it('null', () => {\n        mustThrewException(() => {\n            notEmptyString(null);\n        });\n    });\n    it('obj', () => {\n        mustThrewException(() => {\n            notEmptyString({});\n        });\n    });\n});\ndescribe('notEmptyArray', () => {\n    it('not empty', () => {\n        notEmptyArray(['', '']);\n    });\n    it('empty', () => {\n        mustThrewException(() => {\n            notEmptyArray([]);\n        });\n    });\n    it('empty and custom error msg', () => {\n        const errorMsg = 'error msg';\n        mustThrewException(() => {\n            notEmptyArray([], errorMsg);\n        }, errorMsg);\n    });\n    it('null', () => {\n        mustThrewException(() => {\n            notEmptyArray(null);\n        });\n    });\n    it('null and custom error msg', () => {\n        const errorMsg = 'error msg';\n        mustThrewException(() => {\n            notEmptyArray(null, errorMsg);\n        }, errorMsg);\n    });\n    it('undefined', () => {\n        mustThrewException(() => {\n            notEmptyArray(undefined);\n        });\n    });\n    it('undefined and custom error msg', () => {\n        const errorMsg = 'error msg';\n        mustThrewException(() => {\n            notEmptyArray(undefined, errorMsg);\n        }, errorMsg);\n    });\n});\ndescribe('emptyArray', () => {\n    it('empty', () => {\n        emptyArray([]);\n    });\n    it('not empty', () => {\n        mustThrewException(() => {\n            emptyArray(['', '']);\n        });\n    });\n    it('null', () => {\n        emptyArray(null);\n    });\n    it('undefined', () => {\n        emptyArray(undefined);\n    });\n});\n//# sourceMappingURL=index.test.js.map"]}